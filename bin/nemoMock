#!/usr/bin/env python

"""

Generate mock cluster catalogs - runs on output from nemo

"""

import os
import sys
import resource
import glob
import numpy as np
import pylab as plt
import astropy.table as atpy
from astLib import *
from scipy import stats
from scipy import interpolate
from scipy import ndimage
from scipy import optimize
from nemo import signals
from nemo import maps
from nemo import catalogs
from nemo import MockSurvey
from nemo import plotSettings
from nemo import startUp
from nemo import pipelines
import argparse
import types
import pickle
import astropy.io.fits as pyfits
import time
import yaml
import IPython
plt.matplotlib.interactive(False)

#------------------------------------------------------------------------------------------------------------
if __name__ == '__main__':

    parser=argparse.ArgumentParser("nemoMock")
    parser.add_argument("configFileName", help="""A .yml configuration file.""")
    parser.add_argument("-M", "--mpi", dest="MPIEnabled", action="store_true", help="""Enable MPI. If you 
                        want to use this, run with e.g., mpiexec -np 4 nemoMock configFile.yml -M""", 
                        default = False)
    args = parser.parse_args()
    
    parDictFileName=args.configFileName
    config=startUp.NemoConfig(parDictFileName, MPIEnabled = args.MPIEnabled, verbose = False)

    if 'makeMockCatalogs' in config.parDict.keys():
        numMocksToMake=config.parDict['makeMockCatalogs']
    else:
        numMocksToMake=1

    # Remove this once we re-jig for MPI
    if config.MPIEnabled == True and numMocksToMake > 1:
        raise Exception("NemoMock needs to be adapted for MPI if making multiple mocks - not done yet.")

    pipelines.makeMockClusterCatalog(config, numMocksToMake = numMocksToMake, writeCatalogs = True, verbose = True)
